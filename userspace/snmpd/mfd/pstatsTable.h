/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 17337 $ of $
 *
 * $Id:$
 */
#ifndef PSTATSTABLE_H
#define PSTATSTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(WR-SWITCH-MIB)
config_require(WR-SWITCH-MIB/pstatsTable/pstatsTable_interface)
config_require(WR-SWITCH-MIB/pstatsTable/pstatsTable_data_access)
config_require(WR-SWITCH-MIB/pstatsTable/pstatsTable_data_get)
config_require(WR-SWITCH-MIB/pstatsTable/pstatsTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for pstatsTable 
     */
#include "pstatsTable_oids.h"

    /*
     * enum definions 
     */
#include "pstatsTable_enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_pstatsTable(void);
    void            shutdown_pstatsTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table pstatsTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * WR-SWITCH-MIB::pstatsTable is subid 2 of wrsPstats.
     * Its status is Current.
     * OID: .1.3.6.1.4.1.96.100.2.2, length: 10
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review pstatsTable registration context.
     */
    typedef netsnmp_data_list pstatsTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review pstatsTable data context structure.
     * This structure is used to represent the data for pstatsTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * pstatsTable.
     */
    typedef struct pstatsTable_data_s {

        /*
         * pstatsDescr(2)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            pstatsDescr[32];
        size_t          pstatsDescr_len;        /* # of char elements, not bytes */

        /*
         * pstatsWR0(3)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR0;

        /*
         * pstatsWR1(4)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR1;

        /*
         * pstatsWR2(5)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR2;

        /*
         * pstatsWR3(6)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR3;

        /*
         * pstatsWR4(7)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR4;

        /*
         * pstatsWR5(8)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR5;

        /*
         * pstatsWR6(9)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR6;

        /*
         * pstatsWR7(10)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR7;

        /*
         * pstatsWR8(11)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR8;

        /*
         * pstatsWR9(12)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR9;

        /*
         * pstatsWR10(13)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR10;

        /*
         * pstatsWR11(14)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR11;

        /*
         * pstatsWR12(15)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR12;

        /*
         * pstatsWR13(16)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR13;

        /*
         * pstatsWR14(17)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR14;

        /*
         * pstatsWR15(18)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR15;

        /*
         * pstatsWR16(19)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR16;

        /*
         * pstatsWR17(20)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
        u_long          pstatsWR17;

    } pstatsTable_data;


    /*
     * TODO:120:r: |-> Review pstatsTable mib index.
     * This structure is used to represent the index for pstatsTable.
     */
    typedef struct pstatsTable_mib_index_s {

        /*
         * pstatsIndex(1)/INTEGER32/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
        long            pstatsIndex;


    } pstatsTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review pstatsTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_pstatsTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review pstatsTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * pstatsTable_rowreq_ctx pointer.
     */
    typedef struct pstatsTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_pstatsTable_IDX_LEN];

        pstatsTable_mib_index tbl_idx;

        pstatsTable_data data;

        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to pstatsTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *pstatsTable_data_list;

    } pstatsTable_rowreq_ctx;

    typedef struct pstatsTable_ref_rowreq_ctx_s {
        pstatsTable_rowreq_ctx *rowreq_ctx;
    } pstatsTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int             pstatsTable_pre_request(pstatsTable_registration *
                                            user_context);
    int             pstatsTable_post_request(pstatsTable_registration *
                                             user_context, int rc);

    int             pstatsTable_rowreq_ctx_init(pstatsTable_rowreq_ctx *
                                                rowreq_ctx,
                                                void *user_init_ctx);
    void            pstatsTable_rowreq_ctx_cleanup(pstatsTable_rowreq_ctx *
                                                   rowreq_ctx);


    pstatsTable_rowreq_ctx
        *pstatsTable_row_find_by_mib_index(pstatsTable_mib_index *
                                           mib_idx);

    extern const oid pstatsTable_oid[];
    extern const int pstatsTable_oid_size;


#include "pstatsTable_interface.h"
#include "pstatsTable_data_access.h"
#include "pstatsTable_data_get.h"
#include "pstatsTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* PSTATSTABLE_H */
/** @} */
