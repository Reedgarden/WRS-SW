#!/bin/sh
# A script to compile the usb loader, possibly changing the mac address


# Sanity checks
if [ -d ./usb-loader ]; then true; else
    echo "$0: Please run me from the top-level wr-switch-sw directory" >& 2
    exit 1
fi

# Check if atmel sam-ba is find by lusb
lsusb | grep "at91sam SAMBA" &> /dev/null
if [ $? -gt "0" ]; then
        echo "Did not find the sam-ba bootloader in lsub....\nPlease check that the Dataflash is short-circuited!"
        exit 1;
fi

err=0;
if [ -f ./binaries/at91bootstrap.bin ]; then true; else err=1; fi
if [ -f ./binaries/barebox.bin ]; then true; else err=1; fi

if [ $err -eq 1 ]; then
    echo "$0: Can't find either ./binaries/at91bootstrap.bin" >& 2
    echo "$0:                or ./binaries/barebox.bin" >& 2
    exit 1
fi

# parse command line
MAC=""
DEV=""
FLAGS=""
while [ $# -ge 1 ]; do
    case $1 in
    --help|-h) 	echo "Usage  :\t $0 [options] MAC \nOptions:\t same as mch_flasher\n\n";
				echo ">\$ usb-loader/mch_flasher -h"; usb-loader/mch_flasher -h; 
				exit 0;;
	/* ) DEV="-s $1"; shift ;;
	*:* ) MAC="$1"; shift ;;
	-*) FLAGS="${FLAGS} $1"; shift;;
	* ) echo "$0: Invalid argument \"$1\"" >&2; exit 1;;
    esac
done


# build flasher itself
if CC=cc make -s -C usb-loader; then true; else
	echo "$0: Error compiling usb-loader" >&2; exit 1;
fi

# check & change mac address
if [ "x$MAC" != "x" ]; then
    X="[0-9a-fA-F][0-9a-fA-F]"
    if echo $MAC | grep "^${X}:${X}:${X}:${X}:${X}:${X}\$" > /dev/null; then
		sed -i "s/02:0B:AD:C0:FF:EE/$MAC/" $T
		echo "MAC is now: $MAC"
    else
	echo "$0: Invalid MAC address \"$MAC\"" >&2; exit 1;
    fi
fi

# cat binaries to temp file. Increase size of at91boot (0x8400)
T=$(mktemp /tmp/wrs-flash.XXXXXX)
cp ./binaries/at91bootstrap.bin $T
dd if=./binaries/barebox.bin of=$T conv=notrunc bs=1 seek=33792 2> /dev/null

# flash it (msc...)
(cd usb-loader && ./mch_flasher $FLAGS $DEV $T  )

#rm -f $T
