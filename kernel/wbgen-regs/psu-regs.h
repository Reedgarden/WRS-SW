/*
  Register definitions for slave core: WR PTP Support Unit Controller

  * File           : psu_regs.h
  * Author         : auto-generated by wbgen2 from psu_wishbone_controller.wb
  * Created        : Wed Mar 25 20:00:25 2015
  * Standard       : ANSI C

    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE psu_wishbone_controller.wb
    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!

*/

#ifndef __WBGEN2_REGDEFS_PSU_WISHBONE_CONTROLLER_WB
#define __WBGEN2_REGDEFS_PSU_WISHBONE_CONTROLLER_WB

#include <inttypes.h>

#if defined( __GNUC__)
#define PACKED __attribute__ ((packed))
#else
#error "Unsupported compiler?"
#endif

#ifndef __WBGEN2_MACROS_DEFINED__
#define __WBGEN2_MACROS_DEFINED__
#define WBGEN2_GEN_MASK(offset, size) (((1<<(size))-1) << (offset))
#define WBGEN2_GEN_WRITE(value, offset, size) (((value) & ((1<<(size))-1)) << (offset))
#define WBGEN2_GEN_READ(reg, offset, size) (((reg) >> (offset)) & ((1<<(size))-1))
#define WBGEN2_SIGN_EXTEND(value, bits) (((value) & (1<<bits) ? ~((1<<(bits))-1): 0 ) | (value))
#endif


/* definitions for register: PSU Control Register */

/* definitions for field: Enable PSU in reg: PSU Control Register */
#define PSU_PCR_PSU_ENA                       WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Clear Rx Msg in reg: PSU Control Register */
#define PSU_PCR_PSU_CLR_TX_MSG                WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Inject Packet Priority in reg: PSU Control Register */
#define PSU_PCR_INJ_PRIO_MASK                 WBGEN2_GEN_MASK(8, 3)
#define PSU_PCR_INJ_PRIO_SHIFT                8
#define PSU_PCR_INJ_PRIO_W(value)             WBGEN2_GEN_WRITE(value, 8, 3)
#define PSU_PCR_INJ_PRIO_R(reg)               WBGEN2_GEN_READ(reg, 8, 3)

/* definitions for field: Holdover clockClass in reg: PSU Control Register */
#define PSU_PCR_HOLDOVER_CLK_CLASS_MASK       WBGEN2_GEN_MASK(16, 8)
#define PSU_PCR_HOLDOVER_CLK_CLASS_SHIFT      16
#define PSU_PCR_HOLDOVER_CLK_CLASS_W(value)   WBGEN2_GEN_WRITE(value, 16, 8)
#define PSU_PCR_HOLDOVER_CLK_CLASS_R(reg)     WBGEN2_GEN_READ(reg, 16, 8)

/* definitions for register: PSU Status */

/* definitions for field: Holdover ON in reg: PSU Status */
#define PSU_PSR_HOLDOVER_ON                   WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Announce Holdover Msg Received in reg: PSU Status */
#define PSU_PSR_HD_MSG_RX                     WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Holdover info from SoftPLL in reg: PSU Status */
#define PSU_PSR_HD_ON_SPLL                    WBGEN2_GEN_MASK(2, 1)

/* definitions for field: Active reference from SoftPLl in reg: PSU Status */
#define PSU_PSR_ACTIVE_REF_SPLL_MASK          WBGEN2_GEN_MASK(8, 24)
#define PSU_PSR_ACTIVE_REF_SPLL_SHIFT         8
#define PSU_PSR_ACTIVE_REF_SPLL_W(value)      WBGEN2_GEN_WRITE(value, 8, 24)
#define PSU_PSR_ACTIVE_REF_SPLL_R(reg)        WBGEN2_GEN_READ(reg, 8, 24)

/* definitions for register: PSU Tx Control Register */

/* definitions for field: Drop Announce with duplicate sequence Number in reg: PSU Tx Control Register */
#define PSU_PTCR_SEQID_DUP_DROP               WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Drop Announce with wrong sequence Number in reg: PSU Tx Control Register */
#define PSU_PTCR_SEQID_WRG_DROP               WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Drop Announce with mismatched ClockClass in reg: PSU Tx Control Register */
#define PSU_PTCR_CLKCL_WRG_DROP               WBGEN2_GEN_MASK(2, 1)

/* definitions for field: Drop Announce with mismatched PortIdentity in reg: PSU Tx Control Register */
#define PSU_PTCR_PRTID_WRG_DROP               WBGEN2_GEN_MASK(3, 1)

/* definitions for register: PSU Rx Control Register */

/* definitions for field: Detect duplicate sequence number in Announce  in reg: PSU Rx Control Register */
#define PSU_PRCR_SEQID_DUP_DET                WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Detect wrong sequence number in Announce  in reg: PSU Rx Control Register */
#define PSU_PRCR_SEQID_WRG_DET                WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Detect mismatched PortIdentity in Announce messages in reg: PSU Rx Control Register */
#define PSU_PRCR_PRTID_WRG_DET                WBGEN2_GEN_MASK(2, 1)

/* definitions for register: Rx port mask */

/* definitions for field: Port Mask in reg: Rx port mask */
#define PSU_RXPM_PORT_MASK_MASK               WBGEN2_GEN_MASK(0, 32)
#define PSU_RXPM_PORT_MASK_SHIFT              0
#define PSU_RXPM_PORT_MASK_W(value)           WBGEN2_GEN_WRITE(value, 0, 32)
#define PSU_RXPM_PORT_MASK_R(reg)             WBGEN2_GEN_READ(reg, 0, 32)

/* definitions for register: Tx port mask */

/* definitions for field: Port Mask in reg: Tx port mask */
#define PSU_TXPM_PORT_MASK_MASK               WBGEN2_GEN_MASK(0, 32)
#define PSU_TXPM_PORT_MASK_SHIFT              0
#define PSU_TXPM_PORT_MASK_W(value)           WBGEN2_GEN_WRITE(value, 0, 32)
#define PSU_TXPM_PORT_MASK_R(reg)             WBGEN2_GEN_READ(reg, 0, 32)

/* definitions for register: PSU test and debug */

/* definitions for field: Holdover ON in reg: PSU test and debug */
#define PSU_PTD_DBG_HOLDOVER_ON               WBGEN2_GEN_MASK(0, 1)

/* definitions for field: Tx inject/snoop RAM read valid in reg: PSU test and debug */
#define PSU_PTD_TX_RAM_DAT_VALID              WBGEN2_GEN_MASK(1, 1)

/* definitions for field: Tx inject/snoop RAM ADR in reg: PSU test and debug */
#define PSU_PTD_TX_RAM_RD_ADR_MASK            WBGEN2_GEN_MASK(4, 10)
#define PSU_PTD_TX_RAM_RD_ADR_SHIFT           4
#define PSU_PTD_TX_RAM_RD_ADR_W(value)        WBGEN2_GEN_WRITE(value, 4, 10)
#define PSU_PTD_TX_RAM_RD_ADR_R(reg)          WBGEN2_GEN_READ(reg, 4, 10)

/* definitions for field: Tx inject/snoop RAM DAT in reg: PSU test and debug */
#define PSU_PTD_TX_RAM_RD_DAT_MASK            WBGEN2_GEN_MASK(14, 18)
#define PSU_PTD_TX_RAM_RD_DAT_SHIFT           14
#define PSU_PTD_TX_RAM_RD_DAT_W(value)        WBGEN2_GEN_WRITE(value, 14, 18)
#define PSU_PTD_TX_RAM_RD_DAT_R(reg)          WBGEN2_GEN_READ(reg, 14, 18)

PACKED struct PSU_WB {
  /* [0x0]: REG PSU Control Register */
  uint32_t PCR;
  /* [0x4]: REG PSU Status */
  uint32_t PSR;
  /* [0x8]: REG PSU Tx Control Register */
  uint32_t PTCR;
  /* [0xc]: REG PSU Rx Control Register */
  uint32_t PRCR;
  /* [0x10]: REG Rx port mask */
  uint32_t RXPM;
  /* [0x14]: REG Tx port mask */
  uint32_t TXPM;
  /* [0x18]: REG PSU test and debug */
  uint32_t PTD;
};

#endif
