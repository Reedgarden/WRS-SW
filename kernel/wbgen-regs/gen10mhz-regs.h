/*
  Register definitions for slave core: WR Switch aux clock generation module

  * File           : wrsw_gen10mhz-regs.h
  * Author         : auto-generated by wbgen2 from wrsw_gen_10mhz.wb
  * Created        : Wed Dec  3 17:27:21 2014
  * Standard       : ANSI C

    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE wrsw_gen_10mhz.wb
    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!

*/

#ifndef __WBGEN2_REGDEFS_WRSW_GEN_10MHZ_WB
#define __WBGEN2_REGDEFS_WRSW_GEN_10MHZ_WB

#include <inttypes.h>

#if defined( __GNUC__)
#define PACKED __attribute__ ((packed))
#else
#error "Unsupported compiler?"
#endif

#ifndef __WBGEN2_MACROS_DEFINED__
#define __WBGEN2_MACROS_DEFINED__
#define WBGEN2_GEN_MASK(offset, size) (((1<<(size))-1) << (offset))
#define WBGEN2_GEN_WRITE(value, offset, size) (((value) & ((1<<(size))-1)) << (offset))
#define WBGEN2_GEN_READ(reg, offset, size) (((reg) >> (offset)) & ((1<<(size))-1))
#define WBGEN2_SIGN_EXTEND(value, bits) (((value) & (1<<bits) ? ~((1<<(bits))-1): 0 ) | (value))
#endif


/* definitions for register: Period Register */

/* definitions for field: Half period width in reg: Period Register */
#define GEN10_PR_HP_WIDTH_MASK                WBGEN2_GEN_MASK(0, 16)
#define GEN10_PR_HP_WIDTH_SHIFT               0
#define GEN10_PR_HP_WIDTH_W(value)            WBGEN2_GEN_WRITE(value, 0, 16)
#define GEN10_PR_HP_WIDTH_R(reg)              WBGEN2_GEN_READ(reg, 0, 16)

/* definitions for register: Duty Cycle Register */

/* definitions for field: Low state width in reg: Duty Cycle Register */
#define GEN10_DCR_LOW_WIDTH_MASK              WBGEN2_GEN_MASK(0, 16)
#define GEN10_DCR_LOW_WIDTH_SHIFT             0
#define GEN10_DCR_LOW_WIDTH_W(value)          WBGEN2_GEN_WRITE(value, 0, 16)
#define GEN10_DCR_LOW_WIDTH_R(reg)            WBGEN2_GEN_READ(reg, 0, 16)

/* definitions for register: Coarse Shift Register */

/* definitions for register: IODelay Register */

/* definitions for field: Required delay value in reg: IODelay Register */
#define GEN10_IOR_TAP_SET_MASK                WBGEN2_GEN_MASK(0, 5)
#define GEN10_IOR_TAP_SET_SHIFT               0
#define GEN10_IOR_TAP_SET_W(value)            WBGEN2_GEN_WRITE(value, 0, 5)
#define GEN10_IOR_TAP_SET_R(reg)              WBGEN2_GEN_READ(reg, 0, 5)

/* definitions for field: Current delay value read from IODelay in reg: IODelay Register */
#define GEN10_IOR_TAP_CUR_MASK                WBGEN2_GEN_MASK(8, 5)
#define GEN10_IOR_TAP_CUR_SHIFT               8
#define GEN10_IOR_TAP_CUR_W(value)            WBGEN2_GEN_WRITE(value, 8, 5)
#define GEN10_IOR_TAP_CUR_R(reg)              WBGEN2_GEN_READ(reg, 8, 5)

/* definitions for field: IOdelay locked in reg: IODelay Register */
#define GEN10_IOR_LCK                         WBGEN2_GEN_MASK(31, 1)
/* [0x0]: REG Period Register */
#define GEN10_REG_PR 0x00000000
/* [0x4]: REG Duty Cycle Register */
#define GEN10_REG_DCR 0x00000004
/* [0x8]: REG Coarse Shift Register */
#define GEN10_REG_CSR 0x00000008
/* [0xc]: REG IODelay Register */
#define GEN10_REG_IOR 0x0000000c
#endif
