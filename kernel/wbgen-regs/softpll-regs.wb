-- -*- Mode: LUA; tab-width: 2 -*-

peripheral {
	 name = "WR Softcore PLL";
	 hdl_entity = "softpll_wb";
	 prefix = "SPLL";
	 
	 reg {
			name = "SPLL Control/Status Register";
			prefix = "CSR";
			
				field {
					 name = "Tagger enable";
					 prefix = "TAG_EN";
					 type = SLV;
					 size = 4;
					 access_bus = READ_WRITE;
					 access_dev = READ_ONLY;
				};
				
				field {
					 name = "Tag ready";
					 prefix = "TAG_RDY";
					 type = SLV;
					 size = 4;
					 access_bus = READ_ONLY;
					 access_dev = WRITE_ONLY;
				};

        field {
           name = "Aux clock locking enable";
           prefix = "AUX_EN";
           type = BIT;
					 access_bus = READ_ONLY;
					 access_dev = WRITE_ONLY;
        };

        field {
           name = "Aux clock locked flag (to slave)";
           prefix = "AUX_LOCK";
           type = BIT;
					 access_bus = READ_WRITE;
					 access_dev = READ_ONLY;
        };

		 };

		 reg {
				name = "HPLL Frequency Error";
				prefix = "PER_HPLL";
				
				field {
					 name = "Period error value";
					 type = SLV;
					 size = 32;
					 access_bus = READ_ONLY;
					 access_dev = WRITE_ONLY;
					 ack_read = "tag_hpll_rd_period_o";

				};
		 };

		 reg {
				name = "DMPLL Tag ref";
				prefix = "TAG_REF";
				
				field {
					 name = "Tag value";
					 type = SLV;
					 size = 32;
					 access_bus = READ_ONLY;
					 access_dev = WRITE_ONLY;
					 ack_read = "tag_ref_rd_ack_o";
				};
		 };

		 reg {
				name = "DMPLL Tag fb";
				prefix = "TAG_FB";
				
				field {
					 name = "Tag value";
					 type = SLV;
					 size = 32;
					 access_bus = READ_ONLY;
					 access_dev = WRITE_ONLY;
					 ack_read = "tag_fb_rd_ack_o";

				};
		 };

	 reg {
				name = "DMPLL Tag aux";
				prefix = "TAG_AUX";
				
				field {
					 name = "Tag value";
					 type = SLV;
					 size = 32;
					 access_bus = READ_ONLY;
					 access_dev = WRITE_ONLY;
					 ack_read = "tag_aux_rd_ack_o";
				};
		 };

		 reg {
				name = "HPLL DAC Output";
				prefix = "DAC_HPLL";
				
				field {
					 name = "DAC value";
					 type = PASS_THROUGH;
					 size = 16;
				};
		 };

		 reg {
				name = "DMPLL DAC Output";
				prefix = "DAC_DMPLL";
				
				field {
					 name = "DAC value";
					 type = PASS_THROUGH;
					 size = 16;
				};
		 }; 

     reg {
				name = "AUX DAC Output";
				prefix = "DAC_AUX";
				
				field {
					 name = "DAC value";
					 type = PASS_THROUGH;
					 size = 24;
				};
		 };

		 reg {
				name = "Deglitcher threshold";
				prefix = "DEGLITCH_THR";
				
				field {
					 name = "Threshold";
					 type = SLV;
					 size = 16;
					 access_bus = READ_WRITE;
					 access_dev = READ_ONLY;
				};
		 };


		  irq {
		  		name = "Got a tag";
		  		prefix = "TAG";
		  		trigger = LEVEL_1;
		  };
	};


